# coding: utf-8
class UserMailer < ActionMailer::Base

  def signup_notification(user)
    setup_email(user)
    @subject    += 'Please activate your new account'
    @body[:url]  = App[:website]+"/activate?activation_code=#{user.activation_code}"

  end

  def activation(user)
    @recipients  = "#{user.email}"
    @from        = App[:from]
    @subject     = "[wangzhen] "
    @sent_on     = Time.now
    @body[:user] = user
    @subject    += 'Your account has been activated!'
    @body[:url]  = App[:website]
    @sent_on     = Time.now
  end

  def user_update(user)
    setup_email(user)
    @subject    += '用户信息已更改'
    @body[:url]  = App[:website]
    @sent_on     = Time.now
  end


  # Delivery notification mail generated by "Contact" module.
  # Note:
  # The only parameter "mail" should be an instance of "Contact" model in "Contact"
  # module.
  def  contact(contact)
    @recipients = App[:recipients]
    @body[:contact] = contact
    @from =  App[:from]
    @subject ="咨询"+ contact.name
    @sent_on     = Time.now
  end


  def  contact_to_user(contact)
    @recipients = contact.email
    @body[:contact] = contact
    @body[:content] = contact.content
    @body[:tel] = contact.phone
    @body[:name] = contact.name
    @body[:email] = contact.email
    @body[:serial] = contact.serial
    @from =  App[:from]
    @subject ='谢谢您的咨询，我们会尽快回复！'
    @sent_on     = Time.now
  end

  def  order(order)
    @recipients = order.email,  App[:recipients]
    @from =  App[:from]
    @subject ="order"
    @sent_on     = Time.now
  end

  def  adv(recipient)
    @recipients = recipient
    @body[:products] =  Product.find(:all ,:limit => 8)
    @from =  "vwangzhen@126.com"
    @subject ="翡翠网上商城"
    @sent_on     = Time.now
  end

  protected
  def setup_email(user)
    @recipients  = "#{user.email}"
    @from        = App[:from]
    @subject     = "[haofeicui.com] "
    @sent_on     = Time.now
    @body[:user] = user
  end

end
